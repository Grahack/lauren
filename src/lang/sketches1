move each robot in robots
feed robots through move
robots > each > add_hat > move


"hi" > uppercase : hi_uppercase

"hi" " " "alan" > concat "!" > print : hi_alan_in_uppercase

? > describe_person

(robot (10 20)) > move
run move robot

say_hi(alan, mary)

create_procedure ?number
  number 1 > add
: add_1

1 2 3 > each (?x x 1 > add)

first_name : "mary rose"
last_name : "cook"
height : 160
likes :
  food : "bananas" "apples"
  games : "squash" "go"
cities : "berlin" "new york" "london"
full_name : first_name last_name > join " "
full_name height > join " " > print

choose
  first_name "mary" > eq - "hi mary" > print
  first_name "rose" > eq - "hi rose" > print

name
  describe_person : [?name ?height > join " " > return]
  names : "mary" "rose" "cook"
  .
    names > map describe_person > join " " > print



1 2 > add ? > say_hi ?

create_procedure ?name ?height (
  !name !height > join " " > print
): describe_person

'a' 'b' 'c' : items
  items > each > uppercase > print

"mary" 160 > describe_person

items -> ("a" "b" "c")
items each do item_count times
  (
.

if ("a" "a") same
  "they are the same" print
.


item <= first(items)
for each item in items



to_dos: "Haircut"

print_to_dos < [?to_dos
  all todos print
]

new_to_do: [?to_dos
  raw_input "What else do you need to do? " > concat to_dos ?
]

[
  print "Oops still a work in progress!"
]: complete_to_do

handle_action: [?to_dos
  raw_input "New item, completed item or print list? ": action

  New: [new_to_do todos]
  Completed: [to_dos] > get action ? > ? : new_to_dos

  ["New" "Print" > contains action] > if ? [print_to_dos new_todos]

  new_to_dos
]

handle_action > forever ?

+ pipeline syntax very easy to read
+ the ? interpolation seems ok to solve the thread-first/thread-last problem
+ no brackets required around lists
+ read top to bottom left to right
- forever and other control flows feel like black boxes
- invocation of > ? > is really weird
- conditionals feels forced